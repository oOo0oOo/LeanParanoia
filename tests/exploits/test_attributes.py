"""
Tests for attribute table mutation exploits (csimp).

The @[csimp] attribute allows replacing one function with another in compiled code.
If the csimp theorem is proven using unsafe code or axioms, this bypasses verification.

These tests ensure the NoCSimp check flags unsound @[csimp] declarations that rely on
unsafe code paths or axioms.
"""

import pytest


@pytest.mark.exploit
def test_unsafe_csimp_rejected(verifier):
    """Unsafe code in csimp theorem dependencies should be caught by NoUnsafe and NoImplementedBy."""
    result = verifier.verify_theorem(
        "LeanTestProject.Attributes.UnsafeCSimp",
        "exploit_theorem",
    )

    assert not result.success
    # The replacement target (fastAdd) relies on implemented_by, so NoCSimp should reject it.
    assert "NoCSimp" in result.failed_tests


@pytest.mark.exploit
def test_axiom_csimp_rejected(verifier):
    """Axiom-based csimp theorems should be caught by AxiomWhitelist."""
    result = verifier.verify_theorem(
        "LeanTestProject.Attributes.AxiomCSimp",
        "exploit_theorem",
    )

    print(
        f"Result: success={result.success}, failed_tests={result.failed_tests}, errors={result.errors}"
    )
    assert not result.success
    # The csimp theorem itself is an axiom, so AxiomWhitelist should catch it
    assert "AxiomWhitelist" in result.failed_tests
