"""
Tests for custom axiom exploit detection.
"""

import pytest


@pytest.mark.exploit
@pytest.mark.parametrize(
    "module,theorem",
    [
        ("LeanTestProject.CustomAxioms.ProveFalse", "exploit_theorem"),
        ("LeanTestProject.CustomAxioms.ProveAnything", "exploit_theorem"),
        ("LeanTestProject.CustomAxioms.ForgeRunTac", "exploit_theorem"),
        ("LeanTestProject.CustomAxioms.ForgeRunCmd", "exploit_theorem"),
        ("LeanTestProject.CustomAxioms.HiddenInMacro", "exploit_theorem"),
        ("LeanTestProject.CustomAxioms.FakeStdLib", "exploit_theorem"),
        ("LeanTestProject.CustomAxioms.HiddenInInstance", "exploit_theorem"),
        ("LeanTestProject.CustomAxioms.SkipKernelTC", "exploit_theorem"),
    ],
)
def test_custom_axiom_variants(verifier, module, theorem):
    """Test custom axiom exploits are detected"""
    result = verifier.verify_theorem(module, theorem)

    assert not result.success, f"Should reject {module}"
    assert "CustomAxioms" in result.failed_tests
