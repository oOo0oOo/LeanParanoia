"""Regression tests for native_decide and related axioms."""

import pytest


@pytest.mark.exploit
def test_native_decide_axiom_rejected(verifier):
    """Test native_decide rejected with empty axiom whitelist."""
    result = verifier.verify_theorem(
        "LeanTestProject.NativeComputation.NativeDecide", "exploit_theorem", allowed_axioms=[]
    )

    assert not result.success
    assert "CustomAxioms" in result.failed_tests


@pytest.mark.exploit
def test_native_decide_leak_rejected(verifier):
    """native_decide-backed proofs should be rejected even when the axioms are whitelisted."""
    result = verifier.verify_theorem(
        "LeanTestProject.NativeComputation.OfReduce",
        "exploit_theorem",
        allowed_axioms=[
            "propext",
            "Quot.sound",
            "Classical.choice",
            "Lean.ofReduceBool",
            "Lean.ofReduceNat",
            "Lean.trustCompiler",
        ],
        enable_replay=False,
    )

    assert not result.success
    assert "NativeComputation" in result.failed_tests
