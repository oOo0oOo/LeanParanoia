"""Test EnvironmentReplay catches corrupted .olean files."""

import pytest
import shutil
from pathlib import Path


@pytest.mark.exploit
def test_replay_catches_corrupted_olean(verifier):
    """EnvironmentReplay detects corrupted .olean files (supply chain attack)."""

    olean = Path(".pytest_cache/LeanTestProject/.lake/build/lib/lean/LeanTestProject/Valid/Helper.olean")
    backup = olean.with_suffix('.olean.bak')

    # First verify it works with uncorrupted file
    result_clean = verifier.verify_theorem(
        "LeanTestProject.Valid.Dependencies",
        "uses_helper",
        config={"enableReplay": True, "checkAxioms": False},
    )
    assert result_clean.success

    shutil.copy(olean, backup)

    try:
        data = bytearray(olean.read_bytes())
        data[len(data)//2:len(data)//2+8] = b'\xFF' * 8
        olean.write_bytes(data)

        result = verifier.verify_theorem(
            "LeanTestProject.Valid.Dependencies",
            "uses_helper",
            config={"enableReplay": True, "checkAxioms": False},
        )

        assert not result.success
        assert "unreachable" in result.error_trace

    finally:
        shutil.move(backup, olean)
